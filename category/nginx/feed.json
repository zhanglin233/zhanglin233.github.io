{
    "version": "https://jsonfeed.org/version/1",
    "title": "欢迎来到我的个人博客 • All posts by \"nginx\" category",
    "description": "",
    "home_page_url": "http://zhanglin233.github.io",
    "items": [
        {
            "id": "http://zhanglin233.github.io/2021/11/27/computer-science/nginx/2021-11-20-Nginx%E7%9A%84%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E4%B8%8E%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/",
            "url": "http://zhanglin233.github.io/2021/11/27/computer-science/nginx/2021-11-20-Nginx%E7%9A%84%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E4%B8%8E%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/",
            "title": "Nginx的反向代理与负载均衡",
            "date_published": "2021-11-26T16:40:53.655Z",
            "content_html": "<h1 id=\"nginx的反向代理与负载均衡\"><a class=\"anchor\" href=\"#nginx的反向代理与负载均衡\">#</a> Nginx 的反向代理与负载均衡</h1>\n<h2 id=\"反向代理\"><a class=\"anchor\" href=\"#反向代理\">#</a> 反向代理</h2>\n<h3 id=\"什么是反向代理\"><a class=\"anchor\" href=\"#什么是反向代理\">#</a> 什么是反向代理</h3>\n<p>反向代理（Reverse Proxy）方式是指以代理服务器来接受 Internet 上的连接请求，然 后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 Internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p>\n<p><img data-src=\"https://gitee.com/nobody_heard_of_it/pic-md1/raw/master/image/20211120202450.png\" alt=\"\" /></p>\n<h4 id=\"反向代理的作用\"><a class=\"anchor\" href=\"#反向代理的作用\">#</a> 反向代理的作用：</h4>\n<p>（1）保证内网的安全，阻止 web 攻击，大型网站，通常将反向代理作为公网访问地址，Web 服务器是内网</p>\n<p>（2）负载均衡，通过反向代理服务器来优化网站的负载</p>\n<h4 id=\"反向代理和正向代理的区别\"><a class=\"anchor\" href=\"#反向代理和正向代理的区别\">#</a> 反向代理和正向代理的区别</h4>\n<p>首先我们先理解正向代理，正向代理类似一个跳板机，代理访问外部资源。比如我们国内访问谷歌，直接访问访问不到，我们可以通过一个正向代理服务器，请求发到代理服，代理服务器能够访问谷歌，这样由代理去谷歌取到返回数据，再返回给我们，这样我们就能访问谷歌了。</p>\n<p><img data-src=\"https://gitee.com/nobody_heard_of_it/pic-md1/raw/master/image/20211120202139.png\" alt=\"\" /></p>\n<p><strong>正向代理的用途：</strong></p>\n<p>（1）访问原来无法访问的资源，如 google</p>\n<p>​    \t（2） 可以做缓存，加速访问资源</p>\n<p>（3）对客户端访问授权，上网进行认证</p>\n<p>（4）代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息</p>\n<p><strong>正向代理即是客户端代理，代理客户端，服务端不知道实际发起请求的客户端.</strong><br />\n<strong> 反向代理即是服务端代理，代理服务端，客户端不知道实际提供服务的服务端</strong></p>\n<p><img data-src=\"https://gitee.com/nobody_heard_of_it/pic-md1/raw/master/image/20211120202656.png\" alt=\"\" /></p>\n<p>正向代理中，proxy 和 client 同属一个 LAN，对 server 透明；<br />\n反向代理中，proxy 和 server 同属一个 LAN，对 client 透明。<br />\n实际上 proxy 在两种代理中做的事都是代为收发请求和响应，不过从结构上来看正好左右互换了下，所以把后出现的那种代理方式叫成了反向代理。</p>\n<p>正向代理：买票的黄牛</p>\n<p>反向代理：租房的代理</p>\n<h3 id=\"配置反向代理\"><a class=\"anchor\" href=\"#配置反向代理\">#</a> 配置反向代理</h3>\n<p>将 travel 案例部署到 tomcat 中（ROOT 目录），上传到服务器。 （2）启动 TOMCAT，输入网址 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTc3LjEyOTo4MDgw\">http://192.168.177.129:8080</span> 可以看到网站首页</p>\n<pre><code>upstream tomcat-travel&#123; \n  server 192.168.177.129:8080;  # 修改为你自己的虚拟机的ip地址\n &#125; \n server &#123; \n   listen 80; # 监听的端口\n   server_name www.hmtravel.com; # 域名或 ip \n location / &#123; # 访问路径配置\n   # root index;# 案例的部署路径 默认index\n   proxy_pass http://tomcat-travel;   // 与上方tomcat-travel对应\n   index index.html index.htm; # 默认首页\n &#125; \n&#125; \n</code></pre>\n<p>重新启动 Nginx  然后用浏览器测试：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5obXRyYXZlbC5jb20=\">http://www.hmtravel.com</span> （此域名须配置域名）</p>\n<h2 id=\"负载均衡\"><a class=\"anchor\" href=\"#负载均衡\">#</a> 负载均衡</h2>\n<h3 id=\"什么是负载均衡\"><a class=\"anchor\" href=\"#什么是负载均衡\">#</a> 什么是负载均衡</h3>\n<p>负载均衡 建立在现有网络结构之上，它提供了一种廉价有效透明的方法扩展网络设备 和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的灵活性和可用性。  负载均衡，英文名称为 Load Balance，其意思就是分摊到多个操作单元上进行执行， 例如 Web 服务器、FTP 服务器、企业关键应用服务器和其它关键任务服务器等，从而共同完 成工作任务。</p>\n<h3 id=\"负载均衡准备工作\"><a class=\"anchor\" href=\"#负载均衡准备工作\">#</a> 负载均衡准备工作</h3>\n<p>将相同的工程复制三份或不同的工程部署到服务器上，分别修改他们的端口使端口各不相同，如 80，81，82。分别启动这三个服务。 为了能够区分是访问哪个服务器的网站，可以在首页标题加上标记以便区分</p>\n<h3 id=\"修改nginx配置文件\"><a class=\"anchor\" href=\"#修改nginx配置文件\">#</a> 修改 Nginx 配置文件</h3>\n<pre><code>upstream tomcat-travel &#123; \n\tserver 192.168.177.129:8080; # 项目的部署地址\n\tserver 192.168.177.129:8081  weight=2; # 不同的权重可以使不同的服务器被访问到的概率不同，权重越高概率越大\n\tserver 192.168.177.129:8082; \n &#125; \n server &#123; \n \tlisten 80; # 监听的端口\n \tserver_name www.hmtravel.com; # 绑定的域名或 ip \n\tlocation / &#123; # 访问路径配置\n \t\t# root index;# 根目录\n \t\tproxy_pass http://tomcat-travel; \n \t\tindex index.html index.htm; # 默认首页\n \t&#125; \n\terror_page 500 502 503 504 /50x.html; # 错误页面\n \tlocation = /50x.html &#123; \n \t\troot html; \n \t&#125; \n &#125;\n</code></pre>\n<p>启动 Nginx 观察结果便可</p>\n<p>参考文章：[1] <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdGFvc3Rhcnl1L3AvMTA1NDcxMzIuaHRtbA==\">反向代理和正向代理区别 - 泛夜泰克 - 博客园 (cnblogs.com)</span>)</p>\n<p>​\t\t\t\t\t[2] <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXF2NHkxbzc5dD9wPTUzOQ==\">黑马程序员 JavaWeb 全套基础教程，java web 从入门到项目实战（IDEA 版 javaweb）文档资料_哔哩哔哩_bilibili</span></p>\n",
            "tags": [
                "Nginx"
            ]
        }
    ]
}